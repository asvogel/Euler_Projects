def multiples(cap, *factors):
	# Project Euler Problem 1:
	# If we list all the natural numbers below 10 that are multiples 
		# of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples
		# is 23. Find the sum of all the multiples of 3 or 5 below 1000.
	# Method: create list of all multiples of user supplied factors 
		# less than the user supplied cap. Delete duplicates and sum.
	mylist = []
	for x in range(cap+1):
		for num in factors:
			if num*x < cap:
				mylist.append(num*x)
	mylist = list(dict.fromkeys(mylist))
	out = sum(mylist)
	return out

def fibs(cap,*factors):
	# Project Euler Problem 2:
	# Each new term in the Fibonacci sequence is generated by
		# adding the previous two terms. By considering the terms 
		# in the Fibonacci sequence whose values do not exceed four 
		# million, find the sum of the even-valued terms.
	# Method: create list of all fibonacci terms that are divisible by
		# any of the factors. Delete duplicates. Find sum.
	fib_nums = [1,2]
	mylist = [2]
	i = 1
	while fib_nums[i] < cap:
		newnum = fib_nums[i]+fib_nums[i-1]
		for num in factors:
			if newnum%num==0:
				mylist.append(newnum)
		fib_nums.append(newnum)
		i = i+1
	mylist = list(dict.fromkeys(mylist))
	out = sum(mylist)
	return out

print(fibs(4000000,2))
